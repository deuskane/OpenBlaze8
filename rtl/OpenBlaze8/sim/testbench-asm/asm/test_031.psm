; ;------------------------------------
; ; Test 031
; ; fetch/store indirect address
; ; WARNING : RAM address is invalid (> $3F)
; ;------------------------------------

; ;------------------------------------
; ; directive compilation fichier
; ;------------------------------------

VHDL      "../ROM_blank_adh.vhd", "../../OpenBlaze8_ROM.vhd", "OpenBlaze8_ROM"

; ;------------------------------------
; ; Constantes
; ;------------------------------------
sp                  EQU       sF

test_val_ok         EQU       $FA
test_val_ko         EQU       $ED

; ;------------------------------------
; ; directives pour le simulateur:  definition des  E/S
; ;------------------------------------
switch_id           EQU       $00
led_id              EQU       $20
debug_id            EQU       $e0

switch              DSIN      switch_id
led                 DSOUT     led_id
debug               DSOUT     debug_id

; ;------------------------------------
; ; MAIN
; ;------------------------------------
                    ORG       $000
main:
                    LOAD      s1, $00             ; data
                    LOAD      s2, $21             ; data init

                    LOAD      s0, $C0             ; address
                    LOAD      sA, s0
                    ADD       sA, 64
                    LOAD      s1, s2
                    JUMP      store_loop_test
store_loop_body: 
                    STORE     s1, s0
                    ADD       s0, 1
                    ADD       s1, 1

store_loop_test: 
                    COMP      s0, sA
                    JUMP      NZ, store_loop_body


                    LOAD      s0, $C0
                    LOAD      s1, s2
                    JUMP      fetch_loop_test
fetch_loop_body: 
                    FETCH     s3, s0
                    COMP      s1, s3
                    JUMP      NZ, test_ko
                    ADD       s0, 1
                    ADD       s1, 1

fetch_loop_test: 
                    COMP      s0, sA
                    JUMP      NZ, fetch_loop_body



                    JUMP      test_ok

; ;------------------------------------
; ; Test ok/ko
; ;------------------------------------
test_ko:
                    LOAD      sE, test_val_ko
                    OUT       sE, debug_id
                    JUMP      test_ko

                    ORG       $3FC
test_ok: 
                    LOAD      sE, test_val_ok
                    OUT       sE, debug_id
                    JUMP      test_ok

; ;------------------------------------
; ; Interrupt VECTOR
; ;------------------------------------
                    ORG       $3FF
                    RETI      ENABLE
